{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.localUrl = \"https://localhost:7196/api/Order\";\n    this.prodUrl = \"https://pwswarehouseapi.azurewebsites.net/api/Order\";\n    this.apiUrl = this.prodUrl;\n  }\n  getAllOrders(page, pageSize) {\n    const params = {\n      page: page.toString(),\n      pageSize: pageSize.toString()\n    };\n    return this.http.get(this.apiUrl, {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  //generate receipt numbers\n  GenerateReceiptNumbers(qnty, lastrcpNo) {\n    const url = `${this.apiUrl}/GenerateReceiptNumber?qnty=${qnty}&lastrcpNo=${lastrcpNo}`;\n    return this.http.get(url).pipe(catchError(this.handleError));\n  }\n  //save transfer shipment data\n  postFormData(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.apiUrl, data, httpOptions).pipe(catchError(this.handleError));\n  }\n  //check Dupllicate Sipment Number\n  checkDuplicateShipmentNumber(shipmentNumber) {\n    const params = {\n      shipmentNumber\n    };\n    return this.http.get(this.apiUrl + '/CheckDuplicateShipmentNumber', {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    // You can handle errors as per your application's requirements.\n    console.error('An error occurred:', error.error);\n    return throwError(error.error);\n  }\n  postDriverDetail(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    var producurl = \"https://pwswarehouseapi.azurewebsites.net/api/Order_Driver\";\n    var locurl = \"https://localhost:7196/api/Order_Driver\";\n    return this.http.post(producurl, data, httpOptions).pipe(catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","OrderService","constructor","http","localUrl","prodUrl","apiUrl","getAllOrders","page","pageSize","params","toString","get","pipe","handleError","GenerateReceiptNumbers","qnty","lastrcpNo","url","postFormData","data","httpOptions","headers","post","checkDuplicateShipmentNumber","shipmentNumber","error","console","postDriverDetail","producurl","locurl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\PWS\\WareHouseManagement\\src\\app\\Services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Shipment } from '../Models/shipment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  localUrl=\"https://localhost:7196/api/Order\";\r\n  prodUrl=\"https://pwswarehouseapi.azurewebsites.net/api/Order\"\r\n  private apiUrl = this.prodUrl;\r\n   qrs:any;\r\n   rcptNmbrs:any;\r\n   shipNum:any;\r\n   rowdata:any;\r\n   shipmentData!:Shipment;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getAllOrders(page:number,pageSize:number): Observable<any[]> {\r\n    const params = { page: page.toString(), pageSize: pageSize.toString() };\r\n    return this.http.get<any[]>(this.apiUrl,{params}).pipe(catchError(this.handleError));\r\n  }\r\n //generate receipt numbers\r\npublic GenerateReceiptNumbers(qnty: number,lastrcpNo:string): Observable<string[]> \r\n {\r\n   const url = `${this.apiUrl}/GenerateReceiptNumber?qnty=${qnty}&lastrcpNo=${lastrcpNo}`;\r\n\r\n   return this.http.get<string[]>(url)\r\n     .pipe(catchError(this.handleError));\r\n }\r\n\r\n //save transfer shipment data\r\n  public postFormData(data: Shipment): Observable<string[]> \r\n  {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.post<string[]>(this.apiUrl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  //check Dupllicate Sipment Number\r\n  checkDuplicateShipmentNumber(shipmentNumber: string): Observable<any> {\r\n    const params = { shipmentNumber };\r\n    return this.http.get<any>(this.apiUrl + '/CheckDuplicateShipmentNumber', { params })\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  \r\n  private handleError(error: any) {\r\n    // You can handle errors as per your application's requirements.\r\n    console.error('An error occurred:', error.error);\r\n    return throwError(error.error);\r\n  }\r\n\r\n  public postDriverDetail(data: any): Observable<string[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    var producurl=\"https://pwswarehouseapi.azurewebsites.net/api/Order_Driver\";\r\n    var locurl=\"https://localhost:7196/api/Order_Driver\";\r\n    return this.http.post<string[]>(producurl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAoB,sBAAsB;AAC1E,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,YAAY;EAUvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,QAAQ,GAAC,kCAAkC;IAC3C,KAAAC,OAAO,GAAC,qDAAqD;IACrD,KAAAC,MAAM,GAAG,IAAI,CAACD,OAAO;EAMU;EAEhCE,YAAYA,CAACC,IAAW,EAACC,QAAe;IAC7C,MAAMC,MAAM,GAAG;MAAEF,IAAI,EAAEA,IAAI,CAACG,QAAQ,EAAE;MAAEF,QAAQ,EAAEA,QAAQ,CAACE,QAAQ;IAAE,CAAE;IACvE,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,IAAI,CAACN,MAAM,EAAC;MAACI;IAAM,CAAC,CAAC,CAACG,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACtF;EACD;EACMC,sBAAsBA,CAACC,IAAY,EAACC,SAAgB;IAExD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACZ,MAAM,+BAA+BU,IAAI,cAAcC,SAAS,EAAE;IAEtF,OAAO,IAAI,CAACd,IAAI,CAACS,GAAG,CAAWM,GAAG,CAAC,CAChCL,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACvC;EAEA;EACQK,YAAYA,CAACC,IAAc;IAEhC,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAED,OAAO,IAAI,CAACK,IAAI,CAACoB,IAAI,CAAW,IAAI,CAACjB,MAAM,EAAEc,IAAI,EAAEC,WAAW,CAAC,CAC5DR,IAAI,CACHb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACL;EAGA;EACAU,4BAA4BA,CAACC,cAAsB;IACjD,MAAMf,MAAM,GAAG;MAAEe;IAAc,CAAE;IACjC,OAAO,IAAI,CAACtB,IAAI,CAACS,GAAG,CAAM,IAAI,CAACN,MAAM,GAAG,+BAA+B,EAAE;MAAEI;IAAM,CAAE,CAAC,CACjFG,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACvC;EAGQA,WAAWA,CAACY,KAAU;IAC5B;IACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;IAChD,OAAO3B,UAAU,CAAC2B,KAAK,CAACA,KAAK,CAAC;EAChC;EAEOE,gBAAgBA,CAACR,IAAS;IAC/B,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IACD,IAAI+B,SAAS,GAAC,4DAA4D;IAC1E,IAAIC,MAAM,GAAC,yCAAyC;IACpD,OAAO,IAAI,CAAC3B,IAAI,CAACoB,IAAI,CAAWM,SAAS,EAAET,IAAI,EAAEC,WAAW,CAAC,CAC1DR,IAAI,CACHb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACL;EAAC,QAAAiB,CAAA,G;qBAnEU9B,YAAY,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZnC,YAAY;IAAAoC,OAAA,EAAZpC,YAAY,CAAAqC,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}