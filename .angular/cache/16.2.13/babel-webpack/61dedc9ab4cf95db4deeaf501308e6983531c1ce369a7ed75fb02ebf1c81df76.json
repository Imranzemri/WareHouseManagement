{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.localUrl = \"https://localhost:44362/api/Shipment\";\n    this.prodUrl = \"https://pwswarehouseapi.azurewebsites.net/api/Shipment\";\n    this.apiUrl = this.prodUrl;\n    this.sts = [];\n  }\n  //post request for Receiving records\n  postFormData(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.apiUrl, data, httpOptions).pipe(catchError(this.handleError));\n  }\n  //check Dupllicate Sipment Number\n  checkDuplicateShipmentNumber(shipmentNumber) {\n    const params = {\n      shipmentNumber\n    };\n    return this.http.get(this.apiUrl + '/CheckDuplicateShipmentNumber', {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    // You can handle errors as per your application's requirements.\n    console.error('An error occurred:', error.error);\n    return throwError(error.error);\n  }\n  //Get request for Receiving\n  getAllShipments(page, pageSize) {\n    const params = {\n      page: page.toString(),\n      pageSize: pageSize.toString()\n    };\n    return this.http.get(this.apiUrl + '/GetShipments', {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  getShipmentsById(shpNmbr) {\n    const params = {\n      shpNmbr: shpNmbr.toString()\n    };\n    return this.http.get(this.apiUrl + '/GetShipmentById', {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  //Get request for Receiving\n  getUpdatedShipments(page, pageSize) {\n    const params = {\n      page: page.toString(),\n      pageSize: pageSize.toString()\n    };\n    return this.http.get(this.apiUrl + '/GetUpdatedShipments', {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  //post request for Receiving Driver details\n  postDriverDetail(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    var producurl = \"https://pwswarehouseapi.azurewebsites.net/api/Drivers\";\n    var locurl = \"https://localhost:7196/api/Drivers\";\n    return this.http.post(producurl, data, httpOptions).pipe(catchError(this.handleError));\n  }\n  updateLocationAndDescription(locn, desc, rcpNumber, shipmentNo) {\n    const data = {\n      locn: locn,\n      description: desc,\n      rcptNumber: rcpNumber,\n      shipmentNo: shipmentNo\n    };\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put(this.localUrl + '/UpdateLocationAndDescription', data, httpOptions).pipe(catchError(this.handleError));\n  }\n  //generate receipt numbvers\n  GenerateReceiptNumbers(qnty, lastrcpNo) {\n    const url = `${this.apiUrl}/GenerateReceiptNumber?qnty=${qnty}&lastrcpNo=${lastrcpNo}`;\n    return this.http.get(url).pipe(catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","ApiService","constructor","http","localUrl","prodUrl","apiUrl","sts","postFormData","data","httpOptions","headers","post","pipe","handleError","checkDuplicateShipmentNumber","shipmentNumber","params","get","error","console","getAllShipments","page","pageSize","toString","getShipmentsById","shpNmbr","getUpdatedShipments","postDriverDetail","producurl","locurl","updateLocationAndDescription","locn","desc","rcpNumber","shipmentNo","description","rcptNumber","put","GenerateReceiptNumbers","qnty","lastrcpNo","url","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\PWS\\WareHouseManagement\\src\\app\\Services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Shipment } from '../Models/shipment';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n\r\n\r\n  localUrl = \"https://localhost:44362/api/Shipment\";\r\n  prodUrl = \"https://pwswarehouseapi.azurewebsites.net/api/Shipment\";\r\n  private apiUrl = this.prodUrl;\r\n\r\n  urlEndPoint:any;\r\n  qrs: any;\r\n  rcptNmbrs: any;\r\n  shipNum: any;\r\n  rowdata: any;\r\n  sts:any[] =[];\r\n  shipmentData!: Shipment;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //post request for Receiving records\r\n  postFormData(data: Shipment): Observable<string[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post<string[]>(this.apiUrl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  //check Dupllicate Sipment Number\r\n  checkDuplicateShipmentNumber(shipmentNumber: string): Observable<any> {\r\n    const params = { shipmentNumber };\r\n    return this.http.get<any>(this.apiUrl + '/CheckDuplicateShipmentNumber', { params })\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  private handleError(error: any) {\r\n    // You can handle errors as per your application's requirements.\r\n    console.error('An error occurred:', error.error);\r\n    return throwError(error.error);\r\n  }\r\n\r\n\r\n  //Get request for Receiving\r\n   getAllShipments(page: number, pageSize: number):Observable<any[]>{\r\n    const params = { page: page.toString(), pageSize: pageSize.toString() };\r\n    return this.http.get<any[]>(this.apiUrl+'/GetShipments', { params }).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n   getShipmentsById(shpNmbr:string):Observable<any[]>{\r\n    const params = { shpNmbr: shpNmbr.toString() };\r\n    return this.http.get<any[]>(this.apiUrl+'/GetShipmentById', { params }).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //Get request for Receiving\r\n  getUpdatedShipments(page: number, pageSize: number): Observable<any[]> {\r\n    const params = { page: page.toString(), pageSize: pageSize.toString() };\r\n    return this.http.get<any[]>(this.apiUrl+'/GetUpdatedShipments', { params }).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //post request for Receiving Driver details\r\n  postDriverDetail(data: any): Observable<string[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    var producurl = \"https://pwswarehouseapi.azurewebsites.net/api/Drivers\";\r\n    var locurl = \"https://localhost:7196/api/Drivers\";\r\n    return this.http.post<string[]>(producurl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateLocationAndDescription(locn:string, desc:string, rcpNumber:string, shipmentNo:string):Observable<any[]>\r\n  {\r\n    const data:any= {locn:locn, description:desc, rcptNumber:rcpNumber, shipmentNo:shipmentNo};\r\n    const httpOptions={\r\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n    };\r\n    return this.http.put<string[]>(this.localUrl+'/UpdateLocationAndDescription', data, httpOptions)\r\n               .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //generate receipt numbvers\r\n  GenerateReceiptNumbers(qnty: number, lastrcpNo: string): Observable<string[]> {\r\n    const url = `${this.apiUrl}/GenerateReceiptNumber?qnty=${qnty}&lastrcpNo=${lastrcpNo}`;\r\n\r\n    return this.http.get<string[]>(url)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}