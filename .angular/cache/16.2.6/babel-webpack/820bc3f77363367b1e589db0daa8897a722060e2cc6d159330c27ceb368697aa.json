{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"angular2-notifications\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nconst _c0 = [\"qrCodeContainer\"];\nfunction SuccessComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 8)(4, \"br\");\n    i0.ɵɵelementStart(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function SuccessComponent_div_7_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const qrCode_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.printQRCode(qrCode_r2));\n    });\n    i0.ɵɵtext(6, \"Print\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const qrCode_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.rcptNumbers[i_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", qrCode_r2, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let SuccessComponent = /*#__PURE__*/(() => {\n  var _class;\n  class SuccessComponent {\n    constructor(apiService, _service) {\n      this.apiService = apiService;\n      this._service = _service;\n      this.qrCodeContainer = new ElementRef(null);\n    }\n    ngAfterViewInit() {\n      this._service.success('Success', 'Email Sent Successfully', {\n        position: ['top', 'right'],\n        timeOut: 2000,\n        showProgressBar: true,\n        pauseOnHover: false,\n        clickToClose: false,\n        maxLength: 10\n      });\n    }\n    get qrCodes() {\n      return this.apiService.qrs;\n    }\n    get rcptNumbers() {\n      return this.apiService.rcptNmbrs;\n    }\n    printQRCode(qrCodeURL) {\n      const qrCodeWindow = window.open('', '', 'width=600,height=400');\n      if (qrCodeWindow) {\n        qrCodeWindow.document.write(`<img src=\"${qrCodeURL}\" alt=\"QR Code\" />`);\n        qrCodeWindow.document.close();\n        qrCodeWindow.print();\n        // qrCodeWindow.close();\n      } else {\n        console.error(\"Failed to open a new window for printing.\");\n        // You can display an error message or take other actions as needed.\n      }\n    }\n  }\n  _class = SuccessComponent;\n  _class.ɵfac = function SuccessComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.NotificationsService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-success\"]],\n    viewQuery: function SuccessComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.qrCodeContainer = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"header-image\"], [1, \"success-container\"], [1, \"thank-you\"], [\"src\", \"/assets/check.png\", \"alt\", \"Checkmark\", 1, \"checkmark\"], [1, \"qr-grid\"], [\"qrCodeContainer\", \"\"], [\"class\", \"qr-code\", 4, \"ngFor\", \"ngForOf\"], [1, \"qr-code\"], [\"alt\", \"QR Code\", 3, \"src\"], [\"mat-raised-button\", \"\", \"color\", \"secondary\", 3, \"click\"]],\n    template: function SuccessComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Thank You\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"img\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4, 5);\n        i0.ɵɵtemplate(7, SuccessComponent_div_7_Template, 7, 2, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"simple-notifications\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.qrCodes);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.MatButton, i2.SimpleNotificationsComponent],\n    styles: [\".success-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;text-align:center;background-color:#ff5e003f}.thank-you[_ngcontent-%COMP%]{font-size:24px;margin-top:20px}.checkmark[_ngcontent-%COMP%]{width:50px;margin-top:20px}.qr-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:20px;margin-top:20px}.qr-code[_ngcontent-%COMP%]{text-align:center}@media print{body[_ngcontent-%COMP%]{margin:0}.checkmark[_ngcontent-%COMP%]{display:none}.qr-grid[_ngcontent-%COMP%]{page-break-inside:avoid}.qr-code[_ngcontent-%COMP%]{page-break-after:always;text-align:center}}.header-image[_ngcontent-%COMP%]{position:absolute;top:0;left:50px;width:300px;height:80px;background-image:url(logo-img.663f4ec4be33b4ad.png);background-size:cover;background-position:left}\"]\n  });\n  return SuccessComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}