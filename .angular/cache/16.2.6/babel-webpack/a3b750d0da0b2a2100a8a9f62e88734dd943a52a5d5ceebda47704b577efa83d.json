{"ast":null,"code":"import _asyncToGenerator from \"F:/Angular CLI/Angular-CLI-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Shipment } from '../Models/shipment';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../qrcode.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"angular2-notifications\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/progress-spinner\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nconst _c0 = [\"fileInput\"];\nfunction CargoShipmentComponent_mat_progress_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 26);\n  }\n}\nfunction CargoShipmentComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Client Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Shipment Number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Number of Pieces \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Dimensions \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Weight \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Bay Location \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Enter Free fall Note \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Please add \", ctx_r10.model.Qnty - ctx_r10.imagesArray.length, \" more image(s). \");\n  }\n}\nfunction CargoShipmentComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Select required Number of Images \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CargoShipmentComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please Select Recipients \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CargoShipmentComponent {\n  constructor(apiService, fb, qrCodeService, router, _service) {\n    this.apiService = apiService;\n    this.fb = fb;\n    this.qrCodeService = qrCodeService;\n    this.router = router;\n    this._service = _service;\n    this.model = new Shipment();\n    this.uploadedImages = [];\n    this.qrCodeData = [];\n    this.emptyFields = [];\n    this.showSpinner = false;\n    this.validationStatus = {\n      clientName: true,\n      shipmentNo: true,\n      pieces: true,\n      dimensions: true,\n      weight: true,\n      bayLocation: true,\n      note: true,\n      images: true,\n      email: true\n    };\n    this.imagesArray = [];\n    this.form = this.fb.group({\n      file: ['']\n    });\n    this.imageBytes = null;\n    this.model = new Shipment();\n    this.model.Qnty = 0;\n    this.imagesArray = [];\n  }\n  onSubmit() {\n    if (this.validateFormFields()) {\n      this.convertArrayToJson();\n      this.showSpinner = true;\n      this.apiService.postFormData(this.model).subscribe(response => {\n        // Handle the successful response here\n        console.log('Response:', response);\n        this.generateQRCodeData(response);\n        Swal.fire({\n          title: 'Thank You',\n          text: 'Form submitted successfully',\n          icon: 'success',\n          showConfirmButton: false,\n          timer: 3000\n        });\n        // Navigate to the SuccessComponent if the response message matches\n        this.router.navigate(['/success']);\n      }, error => {\n        // Handle the error here\n        console.error('Error:', error);\n        this.showSpinner = false;\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: error\n        });\n      }, () => {\n        this.showSpinner = false;\n      });\n    } else {\n      this.displayError();\n    }\n  }\n  convertArrayToJson() {\n    // this.model.Imgs = JSON.stringify(this.imagesArray);\n    this.model.Imgs = JSON.stringify(this.imageBytes);\n  }\n  // Define a function to validate a specific field\n  validateField(fieldName) {\n    switch (fieldName) {\n      case 'clientName':\n        this.validationStatus.clientName = !!this.model.Name;\n        break;\n      case 'shipmentNo':\n        this.validationStatus.shipmentNo = !!this.model.ShptNmbr;\n        break;\n      case 'pieces':\n        this.validationStatus.pieces = !!this.model.Qnty;\n        break;\n      case 'dimensions':\n        this.validationStatus.dimensions = !!this.model.Dmnsn;\n        break;\n      case 'weight':\n        this.validationStatus.weight = !!this.model.Wght;\n        break;\n      case 'bayLocation':\n        this.validationStatus.bayLocation = !!this.model.Locn;\n        break;\n      case 'note':\n        this.validationStatus.note = !!this.model.Note;\n        break;\n      case 'images':\n        this.validationStatus.images = Array.isArray(this.imagesArray) && this.imagesArray.length > 0;\n        break;\n      case 'email':\n        this.validationStatus.email = !!this.model.Rpnt;\n        break;\n      default:\n      // Handle other fields or unknown fields here\n    }\n  }\n  // Define a function to validate all fields\n  validateFormFields() {\n    this.validateField('clientName');\n    this.validateField('shipmentNo');\n    this.validateField('pieces');\n    this.validateField('dimensions');\n    this.validateField('weight');\n    this.validateField('bayLocation');\n    this.validateField('note');\n    this.validateField('images');\n    this.validateField('recipients');\n    // Check if any field failed validation\n    return !Object.values(this.validationStatus).some(status => !status);\n  }\n  // onFileChange(event: any) {\n  //   // const file = event.target.files[0];\n  //   // if (file) {\n  //   //   this.form.get('file')?.setValue(file);\n  //   //   this.convertToBase64();\n  //   //   this.imagesArray.push(file.name);\n  //   // }\n  //   this.selectedFile=event.target.files[0];\n  //   this.convertToBase64();\n  // }\n  onFileChange(event) {\n    const input = event.target;\n    if (input.files && input.files[0]) {\n      this.selectedFile = input.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        // Use the result property\n        this.imageBytes = reader.result;\n      };\n      reader.readAsDataURL(this.selectedFile);\n      reader.onload = () => {\n        this.imageBytes = reader.result;\n      };\n    }\n  }\n  // convertToBase64() {\n  //   const reader = new FileReader();\n  //   reader.readAsDataURL(this.selectedFile as Blob);\n  //   reader.onload = () => {\n  //     this.imageBytes = reader.result;\n  //   };\n  //   reader.onerror = (error) => {\n  //     console.log('Error: ', error);\n  //   };\n  // }\n  triggerFileInput() {\n    this.fileInput.nativeElement.click();\n  }\n  generateQRCodeData(response) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // const warehouseReceiptNo = 'WR1000'; // Replace with your logic to generate the receipt number\n      if (_this.model.Qnty !== null) {\n        for (let i = 1; i <= _this.model.Qnty; i++) {\n          const qrCodeData = `Receipt Number: ${response[i - 1]}\\nClient: ${_this.model.Name}\\nShipment No: ${_this.model.ShptNmbr}`;\n          try {\n            const qrCodeUrl = yield _this.qrCodeService.generateQRCode(qrCodeData);\n            _this.qrCodeData.push(qrCodeUrl);\n          } catch (error) {\n            console.error('Error generating QR code:', error);\n          }\n        }\n        _this.apiService.qrs = _this.qrCodeData;\n        _this.apiService.rcptNmbrs = response;\n      }\n    })();\n  }\n  ngAfterViewInit() {\n    this._service.info('Welcome', 'Welcome to the Cargo', {\n      position: ['top', 'right'],\n      timeOut: 4000,\n      showProgressBar: true,\n      pauseOnHover: false,\n      clickToClose: false,\n      maxLength: 10\n    });\n  }\n  displayError() {\n    this._service.error('Error', 'All fields are mandatory', {\n      position: ['top', 'right'],\n      timeOut: 4000,\n      showProgressBar: true,\n      pauseOnHover: false,\n      clickToClose: false,\n      maxLength: 10\n    });\n  }\n}\n_class = CargoShipmentComponent;\n_class.ɵfac = function CargoShipmentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.QrcodeService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.NotificationsService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-cargo-shipment\"]],\n  viewQuery: function CargoShipmentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n    }\n  },\n  decls: 69,\n  vars: 22,\n  consts: [[1, \"service-container\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [1, \"header-image\"], [1, \"form-container\"], [\"shipmentForm\", \"ngForm\"], [1, \"left-column\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"client\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"shipmentNo\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"pieces\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"dimensions\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"weight\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"right-column\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"bay location\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"Note\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"file\", \"accept\", \"image/*\", 2, \"display\", \"none\", 3, \"change\"], [\"fileInput\", \"\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", 1, \"upload-btn\", 3, \"click\"], [\"matInput\", \"\", \"readonly\", \"\", 3, \"value\", \"ngModelChange\"], [\"name\", \"recipients\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"mrzemri235@gmail.com\"], [\"value\", \"option2\"], [\"value\", \"option3\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Enter Custom recipients\", \"name\", \"additionalRecipients\", 3, \"ngModel\", \"ngModelChange\"], [1, \"center-button\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"click\"], [\"mode\", \"indeterminate\"], [1, \"error-message\"]],\n  template: function CargoShipmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CargoShipmentComponent_mat_progress_spinner_1_Template, 1, 0, \"mat-progress-spinner\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3, 4)(5, \"div\", 5)(6, \"mat-form-field\")(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Client\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.model.Name = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_9_listener() {\n        return ctx.validateField(\"clientName\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, CargoShipmentComponent_div_10_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Shipment No\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.model.ShptNmbr = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_14_listener() {\n        return ctx.validateField(\"shipmentNo\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, CargoShipmentComponent_div_15_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Pieces\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.model.Qnty = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_19_listener() {\n        return ctx.validateField(\"pieces\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, CargoShipmentComponent_div_20_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\")(22, \"mat-label\");\n      i0.ɵɵtext(23, \"Dimensions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.model.Dmnsn = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_24_listener() {\n        return ctx.validateField(\"dimensions\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, CargoShipmentComponent_div_25_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-form-field\")(27, \"mat-label\");\n      i0.ɵɵtext(28, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.model.Wght = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_29_listener() {\n        return ctx.validateField(\"weight\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, CargoShipmentComponent_div_30_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 12)(32, \"mat-form-field\")(33, \"mat-label\");\n      i0.ɵɵtext(34, \"Bay Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.model.Locn = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_35_listener() {\n        return ctx.validateField(\"bayLocation\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(36, CargoShipmentComponent_div_36_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"mat-form-field\")(38, \"mat-label\");\n      i0.ɵɵtext(39, \"Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_40_listener($event) {\n        return ctx.model.Note = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_40_listener() {\n        return ctx.validateField(\"note\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(41, CargoShipmentComponent_div_41_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"mat-form-field\")(43, \"mat-label\");\n      i0.ɵɵtext(44, \"Select Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"input\", 15, 16);\n      i0.ɵɵlistener(\"change\", function CargoShipmentComponent_Template_input_change_45_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function CargoShipmentComponent_Template_button_click_47_listener() {\n        i0.ɵɵrestoreView(_r13);\n        const _r9 = i0.ɵɵreference(46);\n        return i0.ɵɵresetView(_r9.click());\n      });\n      i0.ɵɵelementStart(48, \"mat-icon\");\n      i0.ɵɵtext(49, \"attach_file\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_50_listener() {\n        return ctx.validateField(\"images\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(51, CargoShipmentComponent_div_51_Template, 2, 1, \"div\", 7);\n      i0.ɵɵtemplate(52, CargoShipmentComponent_div_52_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"mat-form-field\")(54, \"mat-label\");\n      i0.ɵɵtext(55, \"Select Recipients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"mat-select\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_mat_select_ngModelChange_56_listener($event) {\n        return ctx.model.Rpnt = $event;\n      })(\"ngModelChange\", function CargoShipmentComponent_Template_mat_select_ngModelChange_56_listener() {\n        return ctx.validateField(\"email\");\n      });\n      i0.ɵɵelementStart(57, \"mat-option\", 20);\n      i0.ɵɵtext(58, \"Option 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"mat-option\", 21);\n      i0.ɵɵtext(60, \"Option 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"mat-option\", 22);\n      i0.ɵɵtext(62, \"Option 3\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(63, CargoShipmentComponent_div_63_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"mat-form-field\")(65, \"input\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoShipmentComponent_Template_input_ngModelChange_65_listener($event) {\n        return ctx.model.CstmRpnt = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(66, \"div\", 24)(67, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function CargoShipmentComponent_Template_button_click_67_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(68, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_15_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"@fadeIn\", undefined);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.clientName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.ShptNmbr);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.shipmentNo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Qnty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.pieces);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Dmnsn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.dimensions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Wght);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.weight);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Locn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.bayLocation);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Note);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.note);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", ((tmp_15_0 = ctx.form.get(\"file\")) == null ? null : tmp_15_0.value) ? (tmp_15_0 = ctx.form.get(\"file\")) == null ? null : tmp_15_0.value.name : \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.model.Qnty && ctx.model.Qnty > 0 && ctx.uploadedImages.length < ctx.model.Qnty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.images);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.Rpnt);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.validationStatus.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.CstmRpnt);\n    }\n  },\n  dependencies: [i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i7.MatInput, i8.MatFormField, i8.MatLabel, i9.MatButton, i9.MatMiniFabButton, i10.MatIcon, i11.MatProgressSpinner, i12.MatSelect, i13.MatOption],\n  styles: [\".service-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    min-height: 100vh; \\n\\n    background-color: #ff5e003f;\\n    padding: 20px;\\n    border-radius: 10px;\\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center; \\n\\n    width: 100%; \\n\\n    max-width: 800px;\\n    max-height: 900px;\\n    background-color: #ff5e0098;\\n    padding: 30px;\\n    border-radius: 15px;\\n    margin-top: 20px; \\n\\n}\\n@media (min-width: 768px) {\\n    .form-container[_ngcontent-%COMP%] {\\n        flex-direction: row; \\n\\n        align-items: flex-start;\\n        justify-content: space-between;\\n        height: auto; \\n\\n    }\\n    .left-column[_ngcontent-%COMP%]{\\n        flex: 1; \\n\\n        margin-left: 0 100px; \\n    }\\n    .right-column[_ngcontent-%COMP%] {\\n        flex: 1; \\n\\n        margin-left: 250px; \\n\\n        \\n        \\n    }\\n}\\n\\n\\n\\n.header-image[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 0px;\\n    left: 50px;\\n    width: 300px;\\n    height: 80px;\\n    background-image: url('logo-img.png');\\n    background-size: cover;\\n    background-position: left;\\n}\\n\\n\\n\\n.error-message[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 14px;\\n    margin-top: 5px;\\n}\\n\\n.center-button[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    margin-top: 20px; \\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZ28tc2hpcG1lbnQvY2FyZ28tc2hpcG1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixpQkFBaUIsRUFBRSwwRUFBMEU7SUFDN0YsMkJBQTJCO0lBQzNCLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQixFQUFFLGlDQUFpQztJQUN0RCxXQUFXLEVBQUUsNENBQTRDO0lBQ3pELGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsMkJBQTJCO0lBQzNCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsZ0JBQWdCLEVBQUUsb0NBQW9DO0FBQzFEO0FBQ0E7SUFDSTtRQUNJLG1CQUFtQixFQUFFLDRDQUE0QztRQUNqRSx1QkFBdUI7UUFDdkIsOEJBQThCO1FBQzlCLFlBQVksRUFBRSwrQ0FBK0M7SUFDakU7SUFDQTtRQUNJLE9BQU8sRUFBRSwyQ0FBMkM7UUFDcEQsb0JBQW9CO0lBQ3hCO0lBQ0E7UUFDSSxPQUFPLEVBQUUsMkNBQTJDO1FBQ3BELGtCQUFrQixFQUFFLDJDQUEyQzs7O0lBR25FO0FBQ0o7O0FBRUEsZ0RBQWdEO0FBQ2hEO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsWUFBWTtJQUNaLFlBQVk7SUFDWixxQ0FBZ0Q7SUFDaEQsc0JBQXNCO0lBQ3RCLHlCQUF5QjtBQUM3Qjs7QUFFQSxpREFBaUQ7QUFDakQ7SUFDSSxVQUFVO0lBQ1YsZUFBZTtJQUNmLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGdCQUFnQixFQUFFLCtCQUErQjtBQUNyRCIsInNvdXJjZXNDb250ZW50IjpbIi5zZXJ2aWNlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMTAwdmg7IC8qIFVzZSBtaW4taGVpZ2h0IHRvIGVuc3VyZSB0aGUgY29udGFpbmVyIGV4cGFuZHMgdG8gdGhlIHZpZXdwb3J0IGhlaWdodCAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjVlMDAzZjtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciB0aGUgZm9ybSBob3Jpem9udGFsbHkgKi9cbiAgICB3aWR0aDogMTAwJTsgLyogVGFrZSB1cCB0aGUgZnVsbCB3aWR0aCBvZiB0aGUgY29udGFpbmVyICovXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICBtYXgtaGVpZ2h0OiA5MDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1ZTAwOTg7XG4gICAgcGFkZGluZzogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIG1hcmdpbi10b3A6IDIwcHg7IC8qIEFkZCBzb21lIHRvcCBtYXJnaW4gZm9yIHNwYWNpbmcgKi9cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5mb3JtLWNvbnRhaW5lciB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7IC8qIFN3aXRjaCB0byByb3cgbGF5b3V0IGZvciBsYXJnZXIgc2NyZWVucyAqL1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBoZWlnaHQ6IGF1dG87IC8qIEFsbG93IHRoZSBmb3JtIHRvIGdyb3cgaW4gaGVpZ2h0IGFzIG5lZWRlZCAqL1xuICAgIH1cbiAgICAubGVmdC1jb2x1bW57XG4gICAgICAgIGZsZXg6IDE7IC8qIEVxdWFsIHdpZHRoIGZvciBsZWZ0IGFuZCByaWdodCBjb2x1bW5zICovXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwIDEwMHB4OyBcbiAgICB9XG4gICAgLnJpZ2h0LWNvbHVtbiB7XG4gICAgICAgIGZsZXg6IDE7IC8qIEVxdWFsIHdpZHRoIGZvciBsZWZ0IGFuZCByaWdodCBjb2x1bW5zICovXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyNTBweDsgLyogQWRkIHNvbWUgaG9yaXpvbnRhbCBtYXJnaW4gZm9yIHNwYWNpbmcgKi9cbiAgICAgICAgXG4gICAgICAgIFxuICAgIH1cbn1cblxuLyogQWRkIHJlc3BvbnNpdmUgYWRqdXN0bWVudHMgZm9yIGhlYWRlciBpbWFnZSAqL1xuLmhlYWRlci1pbWFnZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMHB4O1xuICAgIGxlZnQ6IDUwcHg7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogODBweDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ3NyY1xcYXNzZXRzXFxsb2dvLWltZy5wbmcnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQ7XG59XG5cbi8qIEFkZCByZXNwb25zaXZlIGFkanVzdG1lbnRzIGZvciBlcnJvciBtZXNzYWdlICovXG4uZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6IHJlZDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4uY2VudGVyLWJ1dHRvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAyMHB4OyAvKiBBZGQgdG9wIG1hcmdpbiBmb3Igc3BhY2luZyAqL1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n  data: {\n    animation: [trigger('fadeIn', [state('void', style({\n      opacity: 0\n    })), transition(':enter', [animate('300ms ease-in', style({\n      opacity: 1\n    }))])])]\n  }\n});","map":{"version":3,"names":["trigger","state","style","transition","animate","Shipment","Swal","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r10","model","Qnty","imagesArray","length","CargoShipmentComponent","constructor","apiService","fb","qrCodeService","router","_service","uploadedImages","qrCodeData","emptyFields","showSpinner","validationStatus","clientName","shipmentNo","pieces","dimensions","weight","bayLocation","note","images","email","form","group","file","imageBytes","onSubmit","validateFormFields","convertArrayToJson","postFormData","subscribe","response","console","log","generateQRCodeData","fire","title","text","icon","showConfirmButton","timer","navigate","error","displayError","Imgs","JSON","stringify","validateField","fieldName","Name","ShptNmbr","Dmnsn","Wght","Locn","Note","Array","isArray","Rpnt","Object","values","some","status","onFileChange","event","input","target","files","selectedFile","reader","FileReader","onload","result","readAsDataURL","triggerFileInput","fileInput","nativeElement","click","_this","_asyncToGenerator","i","qrCodeUrl","generateQRCode","push","qrs","rcptNmbrs","ngAfterViewInit","info","position","timeOut","showProgressBar","pauseOnHover","clickToClose","maxLength","ɵɵdirectiveInject","i1","ApiService","i2","FormBuilder","i3","QrcodeService","i4","Router","i5","NotificationsService","selectors","viewQuery","CargoShipmentComponent_Query","rf","ctx","ɵɵtemplate","CargoShipmentComponent_mat_progress_spinner_1_Template","ɵɵlistener","CargoShipmentComponent_Template_input_ngModelChange_9_listener","$event","CargoShipmentComponent_div_10_Template","CargoShipmentComponent_Template_input_ngModelChange_14_listener","CargoShipmentComponent_div_15_Template","CargoShipmentComponent_Template_input_ngModelChange_19_listener","CargoShipmentComponent_div_20_Template","CargoShipmentComponent_Template_input_ngModelChange_24_listener","CargoShipmentComponent_div_25_Template","CargoShipmentComponent_Template_input_ngModelChange_29_listener","CargoShipmentComponent_div_30_Template","CargoShipmentComponent_Template_input_ngModelChange_35_listener","CargoShipmentComponent_div_36_Template","CargoShipmentComponent_Template_input_ngModelChange_40_listener","CargoShipmentComponent_div_41_Template","CargoShipmentComponent_Template_input_change_45_listener","CargoShipmentComponent_Template_button_click_47_listener","ɵɵrestoreView","_r13","_r9","ɵɵreference","ɵɵresetView","CargoShipmentComponent_Template_input_ngModelChange_50_listener","CargoShipmentComponent_div_51_Template","CargoShipmentComponent_div_52_Template","CargoShipmentComponent_Template_mat_select_ngModelChange_56_listener","CargoShipmentComponent_div_63_Template","CargoShipmentComponent_Template_input_ngModelChange_65_listener","CstmRpnt","CargoShipmentComponent_Template_button_click_67_listener","ɵɵproperty","undefined","tmp_15_0","get","value","name","opacity"],"sources":["F:\\Angular CLI\\Angular-CLI-main\\src\\app\\cargo-shipment\\cargo-shipment.component.ts","F:\\Angular CLI\\Angular-CLI-main\\src\\app\\cargo-shipment\\cargo-shipment.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ApiService } from '../api.service';\nimport { Shipment } from '../Models/shipment';\nimport { FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { QrcodeService } from '../qrcode.service';\nimport { Route, Router } from '@angular/router';\nimport { MessageService } from '../messsage.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cargo-shipment',\n  templateUrl: './cargo-shipment.component.html',\n  styleUrls: ['./cargo-shipment.component.css'],\n  animations: [\n    trigger('fadeIn', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter', [animate('300ms ease-in', style({ opacity: 1 }))]),\n    ])\n  ]\n})\nexport class CargoShipmentComponent {\n  @ViewChild('fileInput') fileInput!: ElementRef;\n  model: Shipment = new Shipment();\n  form: FormGroup;\n  selectedFile: File | undefined;\n   imageBytes: ArrayBuffer | string | null;\n  uploadedImages: File[] = [];\n  qrCodeData: string[] = [];\n  errorMessage!: string;\n  emptyFields: string[] = [];\n  showSpinner: boolean = false;\n\n  validationStatus = {\n    clientName: true,\n    shipmentNo: true,\n    pieces: true,\n    dimensions: true,\n    weight: true,\n    bayLocation: true,\n    note: true,\n    images: true,\n    email: true,\n  };\n  imagesArray: string[] = [];\n  constructor(private apiService: ApiService, private fb: FormBuilder, private qrCodeService: QrcodeService, private router: Router,private _service:NotificationsService) {\n    this.form = this.fb.group({\n      file: [''],\n    });\n    this.imageBytes = null;\n    this.model = new Shipment();\n    this.model.Qnty = 0;\n    this.imagesArray = [];\n  }\n  onSubmit() {\n    if (this.validateFormFields()) {\n      this.convertArrayToJson();\n      this.showSpinner = true;\n      this.apiService.postFormData(this.model).subscribe(\n        (response: string[]) => {\n          // Handle the successful response here\n          console.log('Response:', response);\n          this.generateQRCodeData(response);\n          Swal.fire({\n            title: 'Thank You',\n            text: 'Form submitted successfully',\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 3000 \n          });\n          // Navigate to the SuccessComponent if the response message matches\n          this.router.navigate(['/success']);\n        },\n        (error) => {\n          // Handle the error here\n          console.error('Error:', error);\n          this.showSpinner = false; \n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: error, \n          });\n        },\n        () => {\n          this.showSpinner = false; \n      }\n      \n      );\n    }\n    else{\n      this.displayError();\n    }\n  }\n  convertArrayToJson() {\n   // this.model.Imgs = JSON.stringify(this.imagesArray);\n    this.model.Imgs=JSON.stringify(this.imageBytes);\n  }\n  // Define a function to validate a specific field\n  validateField(fieldName: string) {\n    switch (fieldName) {\n      case 'clientName':\n        this.validationStatus.clientName = !!this.model.Name;\n        break;\n      case 'shipmentNo':\n        this.validationStatus.shipmentNo = !!this.model.ShptNmbr;\n        break;\n      case 'pieces':\n        this.validationStatus.pieces = !!this.model.Qnty;\n        break;\n      case 'dimensions':\n        this.validationStatus.dimensions = !!this.model.Dmnsn;\n        break;\n      case 'weight':\n        this.validationStatus.weight = !!this.model.Wght;\n        break;\n      case 'bayLocation':\n        this.validationStatus.bayLocation = !!this.model.Locn;\n        break;\n      case 'note':\n        this.validationStatus.note = !!this.model.Note;\n        break;\n      case 'images':\n        this.validationStatus.images = Array.isArray(this.imagesArray) && this.imagesArray.length > 0;\n        break;\n      case 'email':\n        this.validationStatus.email = !!this.model.Rpnt;\n        break;\n      default:\n      // Handle other fields or unknown fields here\n    }\n  }\n  // Define a function to validate all fields\n  validateFormFields() {\n    this.validateField('clientName');\n    this.validateField('shipmentNo');\n    this.validateField('pieces');\n    this.validateField('dimensions');\n    this.validateField('weight');\n    this.validateField('bayLocation');\n    this.validateField('note');\n    this.validateField('images');\n    this.validateField('recipients');\n    // Check if any field failed validation\n    return !Object.values(this.validationStatus).some((status) => !status);\n  }\n  // onFileChange(event: any) {\n  //   // const file = event.target.files[0];\n  //   // if (file) {\n  //   //   this.form.get('file')?.setValue(file);\n  //   //   this.convertToBase64();\n  //   //   this.imagesArray.push(file.name);\n  //   // }\n  //   this.selectedFile=event.target.files[0];\n  //   this.convertToBase64();\n  // }\n\n\nonFileChange(event: Event): void {\n  const input = event.target as HTMLInputElement;\n  if (input.files && input.files[0]) {\n    this.selectedFile = input.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      // Use the result property\n      this.imageBytes = reader.result;\n    };\n    reader.readAsDataURL(this.selectedFile as Blob);\n    reader.onload = () => {\n      this.imageBytes=reader.result;\n    }\n  }\n}\n\n\n  // convertToBase64() {\n  //   const reader = new FileReader();\n  //   reader.readAsDataURL(this.selectedFile as Blob);\n  //   reader.onload = () => {\n  //     this.imageBytes = reader.result;\n  //   };\n  //   reader.onerror = (error) => {\n  //     console.log('Error: ', error);\n  //   };\n  // }\n\n  triggerFileInput() {\n    this.fileInput.nativeElement.click();\n  }\n\n  async generateQRCodeData(response:string[]): Promise<void> {\n    // const warehouseReceiptNo = 'WR1000'; // Replace with your logic to generate the receipt number\n     if (this.model.Qnty !== null) {\n       for (let i = 1; i <= this.model.Qnty; i++) {\n         const qrCodeData = `Receipt Number: ${response[i-1]}\\nClient: ${this.model.Name}\\nShipment No: ${this.model.ShptNmbr}`;\n         try {\n           const qrCodeUrl = await this.qrCodeService.generateQRCode(qrCodeData);\n           this.qrCodeData.push(qrCodeUrl);\n         } catch (error) {\n           console.error('Error generating QR code:', error);\n         }\n       }\n       this.apiService.qrs = this.qrCodeData;\n       this.apiService.rcptNmbrs=response;\n     }\n   }\n\n   ngAfterViewInit(){\n    this._service.info(\n      'Welcome',\n      'Welcome to the Cargo',\n      {\n        position: ['top', 'right'],\n          timeOut: 4000,\n          showProgressBar: true,\n          pauseOnHover: false,\n          clickToClose: false,\n          maxLength: 10\n      }\n  )\n}\n\ndisplayError(){\n  this._service.error(\n    'Error',\n    'All fields are mandatory',\n    {\n      position: ['top', 'right'],\n        timeOut: 4000,\n        showProgressBar: true,\n        pauseOnHover: false,\n        clickToClose: false,\n        maxLength: 10\n    }\n)\n}\n}\n","<div class=\"service-container\">\n  <mat-progress-spinner *ngIf=\"showSpinner\" mode=\"indeterminate\"></mat-progress-spinner>\n  <div class=\"header-image\">\n    </div>\n  <form class=\"form-container\" #shipmentForm=\"ngForm\" [@fadeIn]>\n      <div class=\"left-column\">\n    <mat-form-field>\n      <mat-label>Client</mat-label>\n      <input matInput type=\"text\" name=\"client\" [(ngModel)]=\"model.Name\" (ngModelChange)=\"validateField('clientName')\" required>\n      <div  class=\"error-message\" *ngIf=\"!validationStatus.clientName \">\n       Please Enter Client Name\n      </div>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Shipment No</mat-label>\n      <input matInput type=\"text\" name=\"shipmentNo\" [(ngModel)]=\"model.ShptNmbr\" (ngModelChange)=\"validateField('shipmentNo')\" required>\n      <div  class=\"error-message\" *ngIf=\"!validationStatus.shipmentNo \">\n        Please Enter Shipment Number\n       </div>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Pieces</mat-label>\n      <input matInput type=\"number\" name=\"pieces\" [(ngModel)]=\"model.Qnty\" (ngModelChange)=\"validateField('pieces')\" required>\n      <div  class=\"error-message\" *ngIf=\"!validationStatus.pieces \">\n        Please Enter Number of Pieces\n       </div>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Dimensions</mat-label>\n      <input matInput type=\"text\" name=\"dimensions\" [(ngModel)]=\"model.Dmnsn\" (ngModelChange)=\"validateField('dimensions')\" required>\n      <div  class=\"error-message\" *ngIf=\"!validationStatus.dimensions \">\n        Please Enter Dimensions\n       </div>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Weight</mat-label>\n      <input matInput type=\"text\" name=\"weight\" [(ngModel)]=\"model.Wght\" (ngModelChange)=\"validateField('weight')\" required>\n      <div  class=\"error-message\" *ngIf=\"!validationStatus.weight \">\n        Please Enter Weight\n       </div>\n    </mat-form-field>\n  </div>\n  <div class=\"right-column\">\n      <mat-form-field>\n          <mat-label>Bay Location</mat-label>\n          <input matInput type=\"text\" name=\"bay location\" [(ngModel)]=\"model.Locn\" (ngModelChange)=\"validateField('bayLocation')\" required>\n          <div  class=\"error-message\" *ngIf=\"!validationStatus.bayLocation \">\n            Please Enter Bay Location\n           </div>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Note</mat-label>\n          <input matInput type=\"text\" name=\"Note\" [(ngModel)]=\"model.Note\" (ngModelChange)=\"validateField('note')\" required>\n          <div  class=\"error-message\" *ngIf=\"!validationStatus.note \">\n            Please Enter Free fall Note\n           </div>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Select Image</mat-label>\n          <input\n            type=\"file\"\n            #fileInput\n            (change)=\"onFileChange($event)\"\n            accept=\"image/*\"\n            style=\"display: none;\"\n          />\n          <button mat-mini-fab color=\"primary\" class=\"upload-btn\" (click)=\"fileInput.click()\">\n            <mat-icon>attach_file</mat-icon>\n          </button>\n          <input matInput [value]=\"form.get('file')?.value ? form.get('file')?.value.name : ''\" readonly (ngModelChange)=\"validateField('images')\" />  \n          <div class=\"error-message\" *ngIf=\"model.Qnty && model.Qnty > 0 && uploadedImages.length < model.Qnty\">\n              Please add {{ model.Qnty - imagesArray.length }} more image(s).\n            </div>\n            <div  class=\"error-message\" *ngIf=\"!validationStatus.images \">\n              Please Select required Number of Images\n             </div>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Select Recipients</mat-label>\n          <mat-select name=\"recipients\" [(ngModel)]=\"model.Rpnt\"  (ngModelChange)=\"validateField('email')\" required>\n            <mat-option value=\"mrzemri235@gmail.com\">Option 1</mat-option>\n            <mat-option value=\"option2\">Option 2</mat-option>\n            <mat-option value=\"option3\">Option 3</mat-option>\n          </mat-select>\n          <div class=\"error-message\" *ngIf=\"!validationStatus.email\">\n            Please Select Recipients\n          </div>\n        </mat-form-field>\n        <mat-form-field>\n          <input type=\"text\" matInput placeholder=\"Enter Custom recipients\" name=\"additionalRecipients\" [(ngModel)]=\"model.CstmRpnt\">\n        </mat-form-field>\n    </div>\n  </form>\n  <div class=\"center-button\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">Submit</button>\n  </div>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}