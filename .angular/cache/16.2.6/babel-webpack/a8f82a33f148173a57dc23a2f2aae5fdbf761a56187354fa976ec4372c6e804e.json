{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.localUrl = \"https://localhost:7196/api/Shipment\";\n    this.prodUrl = \"https://pwswarehouse-api.azurewebsites.net/api/Shipment\";\n    this.apiUrl = this.prodUrl;\n  }\n  postFormData(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.apiUrl, data, httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    // You can handle errors as per your application's requirements.\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong. Please try again later.');\n  }\n  getAllShipments(page, pageSize) {\n    const params = {\n      page: page.toString(),\n      pageSize: pageSize.toString()\n    };\n    return this.http.get(\"https://localhost:7196/api/Shipment\", {\n      params\n    }).pipe(catchError(this.handleError));\n  }\n  postDriverDetail(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(\"https://localhost:7196/api/DriverDetails\", data, httpOptions).pipe(catchError(this.handleError));\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","catchError","ApiService","constructor","http","localUrl","prodUrl","apiUrl","postFormData","data","httpOptions","headers","post","pipe","handleError","error","console","getAllShipments","page","pageSize","params","toString","get","postDriverDetail","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Imran Khan\\Downloads\\Angular-CLI-main  latest\\Angular-CLI-main\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  localUrl=\"https://localhost:7196/api/Shipment\";\n  prodUrl=\"https://pwswarehouse-api.azurewebsites.net/api/Shipment\"\n  private apiUrl = this.prodUrl\n   qrs:any;\n   rcptNmbrs:any;\n   rowdata:any;\n  constructor(private http: HttpClient) {}\n  postFormData(data: any): Observable<string[]> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<string[]>(this.apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  private handleError(error: any) {\n    // You can handle errors as per your application's requirements.\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong. Please try again later.');\n  }\n\n  getAllShipments(page:number,pageSize:number): Observable<any[]> {\n    const params = { page: page.toString(), pageSize: pageSize.toString() };\n    return this.http.get<any[]>(\"https://localhost:7196/api/Shipment\",{params}).pipe(catchError(this.handleError));\n  }\n\n  \n  postDriverDetail(data: any): Observable<string[]> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<string[]>(\"https://localhost:7196/api/DriverDetails\", data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAO3C,OAAM,MAAOC,UAAU;EAOrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,QAAQ,GAAC,qCAAqC;IAC9C,KAAAC,OAAO,GAAC,yDAAyD;IACzD,KAAAC,MAAM,GAAG,IAAI,CAACD,OAAO;EAIU;EACvCE,YAAYA,CAACC,IAAS;IACpB,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAED,OAAO,IAAI,CAACK,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACL,MAAM,EAAEE,IAAI,EAAEC,WAAW,CAAC,CAC5DG,IAAI,CACHZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAC7B;EACL;EACQA,WAAWA,CAACC,KAAU;IAC5B;IACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOf,UAAU,CAAC,+CAA+C,CAAC;EACpE;EAEAiB,eAAeA,CAACC,IAAW,EAACC,QAAe;IACzC,MAAMC,MAAM,GAAG;MAAEF,IAAI,EAAEA,IAAI,CAACG,QAAQ,EAAE;MAAEF,QAAQ,EAAEA,QAAQ,CAACE,QAAQ;IAAE,CAAE;IACvE,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAQ,qCAAqC,EAAC;MAACF;IAAM,CAAC,CAAC,CAACP,IAAI,CAACZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAAC;EAChH;EAGAS,gBAAgBA,CAACd,IAAS;IACxB,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAED,OAAO,IAAI,CAACK,IAAI,CAACQ,IAAI,CAAW,0CAA0C,EAAEH,IAAI,EAAEC,WAAW,CAAC,CAC3FG,IAAI,CACHZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAC7B;EACL;;SA3CWZ,UAAU;;mBAAVA,MAAU,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVzB,MAAU;EAAA0B,OAAA,EAAV1B,MAAU,CAAA2B,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}