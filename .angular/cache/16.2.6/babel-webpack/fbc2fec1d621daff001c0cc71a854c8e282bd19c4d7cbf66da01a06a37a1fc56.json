{"ast":null,"code":"var _class;\nimport { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"angular2-notifications\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nconst _c0 = [\"qrCodeContainer\"];\nfunction SuccessComponent_div_7_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rcpt_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rcpt_r4);\n  }\n}\nfunction SuccessComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, SuccessComponent_div_7_p_1_Template, 2, 1, \"p\", 8);\n    i0.ɵɵelement(2, \"img\", 9)(3, \"br\");\n    i0.ɵɵelementStart(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function SuccessComponent_div_7_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const qrCode_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.printQRCode(qrCode_r2));\n    });\n    i0.ɵɵtext(5, \"Print\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const qrCode_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rcptNumbers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", qrCode_r2, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class SuccessComponent {\n  constructor(apiService, _service) {\n    this.apiService = apiService;\n    this._service = _service;\n    this.qrCodeContainer = new ElementRef(null);\n  }\n  ngAfterViewInit() {\n    this._service.success('Success', 'Email Sent Successfully', {\n      position: ['top', 'right'],\n      timeOut: 2000,\n      showProgressBar: true,\n      pauseOnHover: false,\n      clickToClose: false,\n      maxLength: 10\n    });\n  }\n  get qrCodes() {\n    return this.apiService.qrs;\n  }\n  get rcptNumbers() {\n    return this.apiService.rcptNmbrs;\n  }\n  printQRCode(qrCodeURL) {\n    const qrCodeWindow = window.open('', '', 'width=600,height=400');\n    if (qrCodeWindow) {\n      qrCodeWindow.document.write(`<img src=\"${qrCodeURL}\" alt=\"QR Code\" />`);\n      qrCodeWindow.document.close();\n      qrCodeWindow.print();\n      // qrCodeWindow.close();\n    } else {\n      console.error(\"Failed to open a new window for printing.\");\n      // You can display an error message or take other actions as needed.\n    }\n  }\n}\n_class = SuccessComponent;\n_class.ɵfac = function SuccessComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.NotificationsService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-success\"]],\n  viewQuery: function SuccessComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.qrCodeContainer = _t.first);\n    }\n  },\n  decls: 9,\n  vars: 1,\n  consts: [[1, \"header-image\"], [1, \"success-container\"], [1, \"thank-you\"], [\"src\", \"/assets/check.png\", \"alt\", \"Checkmark\", 1, \"checkmark\"], [1, \"qr-grid\"], [\"qrCodeContainer\", \"\"], [\"class\", \"qr-code\", 4, \"ngFor\", \"ngForOf\"], [1, \"qr-code\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"QR Code\", 3, \"src\"], [\"mat-raised-button\", \"\", \"color\", \"secondary\", 3, \"click\"]],\n  template: function SuccessComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Thank You\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4, 5);\n      i0.ɵɵtemplate(7, SuccessComponent_div_7_Template, 6, 2, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"simple-notifications\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.qrCodes);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatButton, i2.SimpleNotificationsComponent],\n  styles: [\"\\n\\n.success-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n  text-align: center;\\n  background-color: #ff5e003f;\\n}\\n\\n.thank-you[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  margin-top: 20px;\\n}\\n\\n.checkmark[_ngcontent-%COMP%] {\\n  width: 50px; \\n\\n  margin-top: 20px;\\n}\\n\\n.qr-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr); \\n\\n  gap: 20px; \\n\\n  margin-top: 20px;\\n}\\n\\n.qr-code[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n\\n\\n@media print {\\n  body[_ngcontent-%COMP%] {\\n    margin: 0; \\n\\n  }\\n\\n  .checkmark[_ngcontent-%COMP%] {\\n    display: none; \\n\\n  }\\n\\n  .qr-grid[_ngcontent-%COMP%] {\\n    page-break-inside: avoid; \\n\\n  }\\n\\n  .qr-code[_ngcontent-%COMP%] {\\n    page-break-after: always; \\n\\n    text-align: center;\\n  }\\n}\\n\\n.header-image[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0px;\\n  left: 50px;\\n  width: 300px;\\n  height: 80px;\\n  background-image: url('logo-img.png');\\n  background-size: cover;\\n  background-position: left;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3VjY2Vzcy9zdWNjZXNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEJBQTBCO0FBQzFCO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVcsRUFBRSw4QkFBOEI7RUFDM0MsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFDQUFxQyxFQUFFLDJDQUEyQztFQUNsRixTQUFTLEVBQUUsb0NBQW9DO0VBQy9DLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQSwwQkFBMEI7QUFDMUI7RUFDRTtJQUNFLFNBQVMsRUFBRSxnQ0FBZ0M7RUFDN0M7O0VBRUE7SUFDRSxhQUFhLEVBQUUscUNBQXFDO0VBQ3REOztFQUVBO0lBQ0Usd0JBQXdCLEVBQUUsc0NBQXNDO0VBQ2xFOztFQUVBO0lBQ0Usd0JBQXdCLEVBQUUsdUNBQXVDO0lBQ2pFLGtCQUFrQjtFQUNwQjtBQUNGOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVk7RUFDWixxQ0FBZ0Q7RUFDaEQsc0JBQXNCO0VBQ3RCLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHN1Y2Nlc3MuY29tcG9uZW50LmNzcyAqL1xuLnN1Y2Nlc3MtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogMTAwdmg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNWUwMDNmO1xufVxuXG4udGhhbmsteW91IHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uY2hlY2ttYXJrIHtcbiAgd2lkdGg6IDUwcHg7IC8qIEFkanVzdCB0aGUgc2l6ZSBhcyBuZWVkZWQgKi9cbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLnFyLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpOyAvKiBBZGp1c3QgdGhlIG51bWJlciBvZiBjb2x1bW5zIGFzIG5lZWRlZCAqL1xuICBnYXA6IDIwcHg7IC8qIEFkanVzdCB0aGUgZ2FwIGJldHdlZW4gUVIgY29kZXMgKi9cbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLnFyLWNvZGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi8qIFNlcGFyYXRlIHByaW50IHN0eWxlcyAqL1xuQG1lZGlhIHByaW50IHtcbiAgYm9keSB7XG4gICAgbWFyZ2luOiAwOyAvKiBSZW1vdmUgZGVmYXVsdCBwYWdlIG1hcmdpbnMgKi9cbiAgfVxuXG4gIC5jaGVja21hcmsge1xuICAgIGRpc3BsYXk6IG5vbmU7IC8qIEhpZGUgdGhlIGNoZWNrbWFyayB3aGVuIHByaW50aW5nICovXG4gIH1cblxuICAucXItZ3JpZCB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyAvKiBBdm9pZCBwYWdlIGJyZWFrcyBpbnNpZGUgdGhlIGdyaWQgKi9cbiAgfVxuXG4gIC5xci1jb2RlIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhbHdheXM7IC8qIFBhZ2UgYnJlYWsgYWZ0ZXIgZWFjaCBRUiBjb2RlIGl0ZW0gKi9cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLmhlYWRlci1pbWFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDUwcHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiA4MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ3NyY1xcYXNzZXRzXFxsb2dvLWltZy5wbmcnKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["ElementRef","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","rcpt_r4","ɵɵtemplate","SuccessComponent_div_7_p_1_Template","ɵɵelement","ɵɵlistener","SuccessComponent_div_7_Template_button_click_4_listener","restoredCtx","ɵɵrestoreView","_r6","qrCode_r2","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","printQRCode","ɵɵproperty","ctx_r1","rcptNumbers","ɵɵsanitizeUrl","SuccessComponent","constructor","apiService","_service","qrCodeContainer","ngAfterViewInit","success","position","timeOut","showProgressBar","pauseOnHover","clickToClose","maxLength","qrCodes","qrs","rcptNmbrs","qrCodeURL","qrCodeWindow","window","open","document","write","close","print","console","error","ɵɵdirectiveInject","i1","ApiService","i2","NotificationsService","selectors","viewQuery","SuccessComponent_Query","rf","ctx","SuccessComponent_div_7_Template"],"sources":["F:\\Angular CLI\\Angular-CLI-main\\src\\app\\success\\success.component.ts","F:\\Angular CLI\\Angular-CLI-main\\src\\app\\success\\success.component.html"],"sourcesContent":["import { Component,ElementRef,ViewChild  } from '@angular/core';\nimport { CargoShipmentComponent } from '../cargo-shipment/cargo-shipment.component';\nimport { ApiService } from '../api.service';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent {\n\n  constructor(private apiService: ApiService,private _service:NotificationsService){\n    this.qrCodeContainer = new ElementRef(null);\n\n  }\n  @ViewChild('qrCodeContainer', { static: true }) qrCodeContainer: ElementRef;\n\n  ngAfterViewInit(){\n    this._service.success(\n      'Success',\n      'Email Sent Successfully',\n      {\n        position: ['top', 'right'],\n          timeOut: 2000,\n          showProgressBar: true,\n          pauseOnHover: false,\n          clickToClose: false,\n          maxLength: 10\n      }\n  )\n}\n  get qrCodes(){\n    return this.apiService.qrs;\n  }\n  get rcptNumbers(){\n    return this.apiService.rcptNmbrs;\n  }\n\n  printQRCode(qrCodeURL: string) {\n    const qrCodeWindow = window.open('', '', 'width=600,height=400');    \n    if (qrCodeWindow) {\n      qrCodeWindow.document.write(`<img src=\"${qrCodeURL}\" alt=\"QR Code\" />`);\n     qrCodeWindow.document.close();\n      qrCodeWindow.print();\n     // qrCodeWindow.close();\n    } else {\n      console.error(\"Failed to open a new window for printing.\");\n      // You can display an error message or take other actions as needed.\n    }\n  }\n  }\n","<div class=\"header-image\"></div>\n<div class=\"success-container\">\n  <h1 class=\"thank-you\">Thank You</h1>\n  <img src=\"/assets/check.png\" alt=\"Checkmark\" class=\"checkmark\" />\n  <!-- <div *ngIf=\"message !== ''\" class=\"success-message\">{{ message }}</div> -->\n  <div class=\"qr-grid\" #qrCodeContainer>\n    <div *ngFor=\"let qrCode of qrCodes\" class=\"qr-code\">\n      <p *ngFor=\"let rcpt of rcptNumbers\">{{rcpt}}</p>\n      <img [src]=\"qrCode\" alt=\"QR Code\" /><br>\n      <button mat-raised-button color=\"secondary\" (click)=\"printQRCode(qrCode)\">Print</button>\n    </div>\n  </div>\n</div>\n<simple-notifications></simple-notifications>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}